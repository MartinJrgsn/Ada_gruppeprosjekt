diff --git Vehicle_Real_Time/src/sensor_control.adb Vehicle_Real_Time/src/sensor_control.adb
index cb0e83a..8bbda4a 100644
--- Vehicle_Real_Time/src/sensor_control.adb
+++ Vehicle_Real_Time/src/sensor_control.adb
@@ -15,28 +15,28 @@ package body Sensor_Control is
          Time_Now := Ada.Real_Time.Clock;


-         Go(10, 0);
+         Go(11, 0);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 45);
+         Go(11, 45);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 90);
+         Go(11, 90);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 135);
+         Go(11, 135);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 180);
+         Go(11, 180);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 135);
+         Go(11, 135);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 90);
+         Go(11, 90);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;
-         Go(10, 45);
+         Go(11, 45);
          delay until Time_now + Ada.Real_Time.Milliseconds(delay_counter);
          delay_counter := delay_counter + delay_interval;

diff --git tasking_project_sense_think_act/src/Tasks/taskact.adb tasking_project_sense_think_act/src/Tasks/taskact.adb
index f74ede7..837b459 100644
--- tasking_project_sense_think_act/src/Tasks/taskact.adb
+++ tasking_project_sense_think_act/src/Tasks/taskact.adb
@@ -51,9 +51,11 @@ package body TaskAct is

    procedure SetupServo is
       Pins : ServoControllerPins;
-  begin
+   begin
       Pins.ServoEn := 11;

+      ServoDriver.SetServoPins(Pins);
+
       Set_Analog_Period_Us (20_000);

       null;
@@ -97,7 +99,20 @@ package body TaskAct is
         ControlMotor(Instruction, MotorDriver.GetMotorPins);
         Put_Line ("Direction is: " & Directions'Image (Direction));

-      end Drive;
+   end Drive;
+
+   procedure Rotate(angle : Angles) is
+      Instruction : ServoInstruction;
+   begin
+      case angle is
+         when Front_Back =>
+            Instruction.ServoAngle := 90;
+         when Left_Right =>
+            Instruction.ServoAngle := 0;
+      end case;
+
+      --ControlServo()
+   end Rotate;

    procedure ControlMotor(Instruction : DriveInstruction; Pins: MotorControllerPins) is

@@ -132,4 +147,12 @@ package body TaskAct is
          --MicroBit.IOs.Write (Pins.RightBackSpeedEnB, Instruction.RightBackSpeed); --disabled since same pin as above
    end ControlMotor;

+   procedure ControlServo(Instruction : ServoInstruction; Pins : ServoControllerPins) is
+
+   begin
+      MicroBit.Servos.Go(Pin      => Pins.ServoEn,
+                         Setpoint => Instruction.ServoAngle);
+   end ControlServo;
+
+
 end TaskAct;
diff --git tasking_project_sense_think_act/src/Tasks/taskact.ads tasking_project_sense_think_act/src/Tasks/taskact.ads
index 75ee4f1..b4a7488 100644
--- tasking_project_sense_think_act/src/Tasks/taskact.ads
+++ tasking_project_sense_think_act/src/Tasks/taskact.ads
@@ -5,8 +5,14 @@ package TaskAct is

    task Act with Priority=> 3;

-   procedure SetupMotors;
+   --Drive motors
+   procedure SetupMotors;
    procedure Drive (direction : Directions);
    procedure ControlMotor(Instruction : DriveInstruction; Pins : MotorControllerPins);

+   --Servo for ultrasonic spinnamagikk
+   procedure SetupServo;
+   procedure Rotate (angle : Angles);
+   procedure ControlServo(Instruction : ServoInstruction; Pins : ServoControllerPins);
+
 end TaskAct;
